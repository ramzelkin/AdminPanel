{"version":3,"sources":["UsersTable.js","NewUserForm.js","useModal.js","AddUserButton.js","EditUserForm.js","App.js","reportWebVitals.js","index.js"],"names":["setDeletedUser","e","target","closest","getAttribute","UsersTable","props","rows","users","map","item","i","name","email","city","className","onClick","editedUser","editRow","deletedUserRow","deleteRow","NewUserForm","isShowing","hide","addNewUser","user","useState","isValid","setIsValid","errorMessage","ReactDOM","createPortal","Fragment","tabIndex","role","type","dataUser","userNameElemValue","document","getElementsByClassName","value","emailElemValue","cityElemValue","getData","userIsValid","toLowerCase","result","test","console","log","isValidEmail","body","useModal","setIsShowing","toggle","AddUserButton","handleChange","EditUserForm","addEditedUser","defaultValue","App","index","setUsers","editingUserIndex","setEditingUserIndex","useEffect","temp","push","splice","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c001475f.chunk.js","sourcesContent":["import React from 'react';\r\nimport './UsersTable.css';\r\nimport './NewUserForm.css';\r\n\r\nconst setDeletedUser = (e) => {\r\n  let target = e.target;\r\n  let row = target.closest(\"tr\");\r\n  let index = row.getAttribute(\"data-index\");\r\n  return index;\r\n}\r\n\r\nconst UsersTable = (props) => {\r\n  const rows = props.users.map((item, i) =>\r\n    <tr key={i} data-index={i}>\r\n      <td>{item.name}</td>\r\n      <td>{item.email}</td>\r\n      <td>{item.city}</td>\r\n      <td>\r\n        <button className=\"editUser\" onClick={ (e) => {\r\n          let editedUser = setDeletedUser(e);\r\n          props.editRow(editedUser);\r\n        }}>Edit</button>\r\n\r\n        <button className=\"deleteUser\" onClick={ (e) => {\r\n            let deletedUserRow = setDeletedUser(e);\r\n            props.deleteRow(deletedUserRow);\r\n          }}>Delete</button>\r\n      </td>\r\n    </tr>\r\n  );\r\n\r\n  return (\r\n    <div className=\"UsersTable-container\">\r\n      <table>\r\n          <thead>\r\n              <tr>\r\n                  <th>User name</th>\r\n                  <th>Email</th>\r\n                  <th>City</th>\r\n              </tr>\r\n          </thead>\r\n          <tbody>\r\n            {rows}\r\n          </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UsersTable;","import React, { useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './NewUserForm.css';\r\n\r\nconst isValidEmail = (value) => {\r\n  value = value.toLowerCase();\r\n  const regex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  let result = regex.test(value);\r\n  console.log(result);\r\n  return result;\r\n}\r\n\r\nconst getData = () => {\r\n  let dataUser = {};\r\n  let userNameElemValue = document.getElementsByClassName('userName')[0].value;\r\n  dataUser[\"name\"] = userNameElemValue;\r\n  let emailElemValue = document.getElementsByClassName('email')[0].value;\r\n  dataUser[\"email\"] = emailElemValue;\r\n  let cityElemValue = document.getElementsByClassName('city')[0].value;\r\n  dataUser[\"city\"] = cityElemValue;\r\n  return dataUser;\r\n}\r\n\r\nconst NewUserForm = ({ isShowing, hide, addNewUser, user }) => {\r\n  const [isValid, setIsValid] = useState(true);\r\n\r\n  const errorMessage = isValid\r\n    ? <div/>\r\n    : <div><span className=\"error-text\">Wrong email</span></div>\r\n\r\n  return isShowing ? ReactDOM.createPortal(\r\n  <React.Fragment>\r\n    <div className=\"modal-overlay\"/>\r\n    <div className=\"modal-wrapper\" aria-modal aria-hidden tabIndex={-1} role=\"dialog\">\r\n      <div className=\"modal\">\r\n        <div className=\"modal-header\">\r\n          <button type=\"button\" className=\"modal-close-button\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={hide}>\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n        </div>\r\n        <div className=\"container\">\r\n          <div>\r\n            <span>User name</span>\r\n            <input type=\"text\" className=\"userName\" />\r\n          </div>\r\n          <div>\r\n            <span>Email</span>\r\n            <input type=\"text\" className=\"email\" />\r\n          </div>\r\n          <div>\r\n          {errorMessage}\r\n            <span>City</span>\r\n            <input type=\"text\" className=\"city\" />\r\n          </div>\r\n        </div>\r\n        <button className=\"save-btn\" onClick={ () => {\r\n          let user = getData();\r\n            let userIsValid = isValidEmail(user.email)\r\n\r\n            setIsValid(userIsValid);\r\n\r\n            if (userIsValid) {\r\n              addNewUser(user);\r\n              hide();\r\n            }\r\n        }}>Save</button>\r\n      </div>\r\n    </div>\r\n  </React.Fragment>, document.body\r\n) : null;\r\n}\r\n\r\nexport default NewUserForm;","import { useState } from 'react';\r\n\r\nconst useModal = () => {\r\n  const [isShowing, setIsShowing] = useState(false);\r\n\r\n  function toggle() {\r\n    setIsShowing(!isShowing);\r\n  }\r\n\r\n  return {\r\n    isShowing,\r\n    toggle,\r\n  }\r\n};\r\n\r\nexport default useModal;","import React from 'react';\r\nimport './AddUserButton.css';\r\nimport NewUserForm from './NewUserForm.js'\r\nimport useModal from './useModal';\r\n\r\nconst AddUserButton = (props) => {\r\n  const {isShowing, toggle} = useModal();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <button className=\"button\" onClick={toggle}>Add user</button>\r\n      <NewUserForm \r\n        isShowing={isShowing}\r\n        hide={toggle}\r\n        addNewUser = {props.handleChange}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default AddUserButton;","import React, { useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './EditUserForm.css';\r\n\r\nconst isValidEmail = (value) => {\r\n  value = value.toLowerCase();\r\n  const regex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  let result = regex.test(value);\r\n  console.log(result);\r\n  return result;\r\n}\r\n\r\nconst getData = () => {\r\n    let dataUser = {};\r\n    let userNameElemValue = document.getElementsByClassName('userName')[0].value;\r\n    dataUser[\"name\"] = userNameElemValue;\r\n    let emailElemValue = document.getElementsByClassName('email')[0].value;\r\n\r\n    dataUser[\"email\"] = emailElemValue;\r\n    \r\n    let cityElemValue = document.getElementsByClassName('city')[0].value;\r\n    dataUser[\"city\"] = cityElemValue;\r\n    return dataUser;\r\n  }\r\n\r\nconst EditUserForm = ({ isShowing, hide, addEditedUser, user }) => {\r\n  const [isValid, setIsValid] = useState(true);\r\n\r\n  const errorMessage = isValid\r\n    ? <div/>\r\n    : <div><span className=\"error-text\">Wrong email</span></div>\r\n  return isShowing ? ReactDOM.createPortal(\r\n    <React.Fragment>\r\n      <div className=\"modal-overlay\"/>\r\n      <div className=\"modal-wrapper\" aria-modal aria-hidden tabIndex={-1} role=\"dialog\">\r\n        <div className=\"modal\">\r\n          <div className=\"modal-header\">\r\n            <button type=\"button\" className=\"modal-close-button\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={hide}>\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div className=\"container\">\r\n            <div>\r\n              <span>User name</span>\r\n              <input type=\"text\" className=\"userName\" defaultValue={user.name}/>\r\n            </div>\r\n            <div>\r\n              <span>Email</span>\r\n              <input type=\"text\" className=\"email\" defaultValue={user.email}/>\r\n            </div>\r\n            {errorMessage}\r\n            <div>\r\n              <span>City</span>\r\n              <input type=\"text\" className=\"city\" defaultValue={user.city}/>\r\n            </div>\r\n          </div>\r\n          <button className=\"save-btn\" onClick={ () => {\r\n            let user = getData();\r\n            let userIsValid = isValidEmail(user.email)\r\n\r\n            setIsValid(userIsValid);\r\n\r\n            if (userIsValid) {\r\n              addEditedUser(user);\r\n              hide();\r\n            }\r\n          }}>Save</button>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>, document.body\r\n  ) : null;\r\n}\r\n\r\nexport default EditUserForm;","import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport UsersTable from './UsersTable.js';\r\nimport AddUserButton from './AddUserButton.js';\r\nimport EditUserForm from './EditUserForm';\r\nimport useModal from './useModal';\r\n\r\nfunction App() {\r\n  const [users, setUsers] = useState([ {\"name\": \"Carl\", \"email\": \"example@gmail.com\", \"city\": \"Rome\" } ]);\r\n  const [editingUserIndex, setEditingUserIndex] = useState(null);\r\n\r\n  const {isShowing, toggle} = useModal();\r\n\r\n  const handleChange = (user) => {\r\n    let temp = [...users];\r\n    temp.push(user);\r\n    setUsers(temp);\r\n  }\r\n\r\n  const deleteRow = (index) => {\r\n    let temp = [...users];\r\n    temp.splice(index, 1);\r\n    setUsers(temp);\r\n  }\r\n\r\n  const editRow = (index) => {\r\n    setEditingUserIndex(index);\r\n    toggle();\r\n  }\r\n\r\n  const makeEditFormCallback = (index) => {\r\n    if (index == null || index < 0) { return (user) => { }; }\r\n    return (user) => {\r\n      let temp = [...users];\r\n\r\n      temp[index] = user;\r\n      setUsers(temp);\r\n      setEditingUserIndex(null);\r\n      toggle();\r\n    };\r\n  }\r\n\r\n  useEffect(() => {\r\n    setUsers(users);\r\n  }, [users]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"App-container\">\r\n        <div className=\"wrapper\">\r\n          <AddUserButton handleChange={handleChange} />\r\n          <UsersTable users={users} deleteRow={deleteRow} editRow={editRow}/>\r\n          <EditUserForm \r\n            isShowing={isShowing}\r\n            hide={toggle}\r\n            addEditedUser={makeEditFormCallback(editingUserIndex)}\r\n            user={editingUserIndex == null ? {} : users[editingUserIndex]}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}